- hosts: all

  tasks:
    - name: Update existent packages to latest version
      become: true
      apt:
        upgrade: yes
        update_cache: yes

    # - name: "Instala pacotes"
    #   apt:
    #     name: "{{ item }}"
    #     state: latest
    #   become: yes # roda com sudo
    #   with_items:
    #     - default-jre
    #     - maven

    - name: Install Docker and Kubernetes dependencies
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg-agent
        - software-properties-common
        - net-tools
        - jq
        - unzip

    - name: Add an apt signing key (GPG) for Docker
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker apt repo
      become: true
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install Docker and Containerd
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Configuring Docker daemon.json file
      become: true
      copy:
        dest: /etc/docker/daemon.json
        content: |
          {
          "exec-opts": ["native.cgroupdriver=systemd"]
          }

    # - name: "Corrigindo docker para o kubernetes"
    #   copy:
    #     src: "docker/daemon.json"
    #     dest: "/etc/docker/daemon.json"
    #   become: yes

    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Add an apt signing key (GPG) for Kubernetes
      become: true
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      become: true
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes
      become: true
      apt:
        update_cache: yes
        state: latest
        name:
          - kubelet 
          - kubeadm 
          - kubectl

    - name: Restart kubelet
      become: true
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: kubelet

    - name: Add vm swappiness
      become: true
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'vm.swappiness = 0'
        state: present
        create: yes

    - name: Add vm overcommit_memory
      become: true
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'vm.overcommit_memory = 1'
        state: present
        create: yes

    - name: Add netbridge config ip4
      become: true
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.bridge.bridge-nf-call-iptables = 1'
        state: present
        create: yes

    - name: Increase net ipv4 tcp_max_syn_backlog
      become: true
      lineinfile:
        path: /etc/sysctl.d/k8s.conf
        line: 'net.ipv4.tcp_max_syn_backlog=2621440'
        state: present
        create: yes

    - name: update sysctl
      become: true
      command: sysctl --system

    - name: Start kubelet
      become: true
      systemd:
        state: started
        daemon_reload: yes
        name: kubelet
        enabled: yes

    - name: Reset kubeadm
      become: true
      shell: kubeadm reset --force

    # - name: Configure node ip
    #   become: true
    #   lineinfile:
    #     path: /etc/default/kubelet
    #     line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}


# ansible-playbook -i hosts provisionar.yml -u ubuntu --private-key ~/Desktop/devops/treinamentoItau
# ssh -i ~/Desktop/devops/treinamentoItau ubuntu@ec2-54-174-235-197.compute-1.amazonaws.com
# ssh -i ~/Desktop/devops/treinamentoItau ubuntu@ec2-50-16-162-135.compute-1.amazonaws.com
# ssh -i ~/Desktop/devops/treinamentoItau ubuntu@ec2-54-173-115-181.compute-1.amazonaws.com

# *** verifica log error
# vim /etc/haproxy/haproxy.cfg
# systemctl restart haproxy
# systemctl status haproxy.service
# tail -f /var/log/haproxy.log

# tail -f /var/log/nginx/error.log
